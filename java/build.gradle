plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = 'com.esamtrade'
description = 'BucketBase Java library for for abstracting object storage solutions'
version = '1.0.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_17

project.ext {
    awsSdkVersionV2 = "2.30.36"
    awsSdkVersionV1 = "1.12.782"
}

repositories {
    mavenCentral()
    maven {
        name = "EsamS3MavenRepo"
        authentication {
            awsIm(AwsImAuthentication)  // takes the credentials from the ~/.aws/credentials
        }
        url "s3://esamtrade-maven-repo/releases"
    }
}

dependencies {
    implementation("commons-io:commons-io:2.16.1")
    implementation("software.amazon.awssdk:s3:${awsSdkVersionV2}") // AWS SDK v2 for S3
    implementation("com.amazonaws:aws-java-sdk:${awsSdkVersionV1}") // AWS SDK v1

    // JUnit for testing
    testImplementation platform("org.junit:junit-bom:5.10.0")
    testImplementation "org.junit.jupiter:junit-jupiter"
}

test {
    useJUnitPlatform()
}

tasks.register("sourceJar", Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set("sources")
}

tasks.register("javadocJar", Jar) {
    from javadoc
    archiveClassifier.set("javadoc")
}

publishing {
    publications {
        esamLibrary(MavenPublication) {
            from(components.java)
            artifact tasks.named("sourceJar").get() // This line is added to include source code in the publication
            artifact tasks.named("javadocJar").get() // This line is added to include the shadowJar in the publication
        }
    }
    repositories {
        maven {
            name = "EsamS3MavenRepo"
            authentication {
                awsIm(AwsImAuthentication)  // takes the credentials from the ~/.aws/credentials
            }
            if (project.version.endsWith("-SNAPSHOT")) {
                url "s3://esamtrade-maven-repo/releases"
            } else {
                url "s3://esamtrade-maven-repo/releases"
            }
        }
    }
}